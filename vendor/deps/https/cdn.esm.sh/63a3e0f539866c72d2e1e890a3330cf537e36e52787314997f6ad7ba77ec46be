import __is_number$ from "/v38/is-number@7.0.0/deno/is-number.js";var z=Object.create,b=Object.defineProperty,N=Object.getPrototypeOf,C=Object.prototype.hasOwnProperty,j=Object.getOwnPropertyNames,D=Object.getOwnPropertyDescriptor;var E=e=>b(e,"__esModule",{value:!0});var L=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports);var q=(e,t,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of j(t))!C.call(e,r)&&r!=="default"&&b(e,r,{get:()=>t[r],enumerable:!(n=D(t,r))||n.enumerable});return e},K=e=>q(E(b(e!=null?z(N(e)):{},"default",e&&e.__esModule&&"default"in e?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e);var T=L((U,S)=>{"use strict";var $=__is_number$,h=(e,t,n)=>{if($(e)===!1)throw new TypeError("toRegexRange: expected the first argument to be a number");if(t===void 0||e===t)return String(e);if($(t)===!1)throw new TypeError("toRegexRange: expected the second argument to be a number.");let r={relaxZeros:!0,...n};typeof r.strictZeros=="boolean"&&(r.relaxZeros=r.strictZeros===!1);let s=String(r.relaxZeros),l=String(r.shorthand),c=String(r.capture),a=String(r.wrap),f=e+":"+t+"="+s+l+c+a;if(h.cache.hasOwnProperty(f))return h.cache[f].result;let i=Math.min(e,t),o=Math.max(e,t);if(Math.abs(i-o)===1){let p=e+"|"+t;return r.capture?`(${p})`:r.wrap===!1?p:`(?:${p})`}let g=Z(e)||Z(t),u={min:e,max:t,a:i,b:o},d=[],w=[];if(g&&(u.isPadded=g,u.maxLen=String(u.max).length),i<0){let p=o<0?Math.abs(o):1;w=M(p,Math.abs(i),u,r),i=u.a=0}return o>=0&&(d=M(i,o,u,r)),u.negatives=w,u.positives=d,u.result=O(w,d,r),r.capture===!0?u.result=`(${u.result})`:r.wrap!==!1&&d.length+w.length>1&&(u.result=`(?:${u.result})`),h.cache[f]=u,u.result};function O(e,t,n){let r=P(e,t,"-",!1,n)||[],s=P(t,e,"",!1,n)||[],l=P(e,t,"-?",!0,n)||[];return r.concat(l).concat(s).join("|")}function A(e,t){let n=1,r=1,s=v(e,n),l=new Set([t]);for(;e<=s&&s<=t;)l.add(s),n+=1,s=v(e,n);for(s=y(t+1,r)-1;e<s&&s<=t;)l.add(s),r+=1,s=y(t+1,r)-1;return l=[...l],l.sort(Q),l}function G(e,t,n){if(e===t)return{pattern:e,count:[],digits:0};let r=B(e,t),s=r.length,l="",c=0;for(let a=0;a<s;a++){let[f,i]=r[a];f===i?l+=f:f!=="0"||i!=="9"?l+=F(f,i,n):c++}return c&&(l+=n.shorthand===!0?"\\d":"[0-9]"),{pattern:l,count:[c],digits:s}}function M(e,t,n,r){let s=A(e,t),l=[],c=e,a;for(let f=0;f<s.length;f++){let i=s[f],o=G(String(c),String(i),r),g="";if(!n.isPadded&&a&&a.pattern===o.pattern){a.count.length>1&&a.count.pop(),a.count.push(o.count[0]),a.string=a.pattern+R(a.count),c=i+1;continue}n.isPadded&&(g=H(i,n,r)),o.string=g+o.pattern+R(o.count),l.push(o),c=i+1,a=o}return l}function P(e,t,n,r,s){let l=[];for(let c of e){let{string:a}=c;!r&&!x(t,"string",a)&&l.push(n+a),r&&x(t,"string",a)&&l.push(n+a)}return l}function B(e,t){let n=[];for(let r=0;r<e.length;r++)n.push([e[r],t[r]]);return n}function Q(e,t){return e>t?1:t>e?-1:0}function x(e,t,n){return e.some(r=>r[t]===n)}function v(e,t){return Number(String(e).slice(0,-t)+"9".repeat(t))}function y(e,t){return e-e%Math.pow(10,t)}function R(e){let[t=0,n=""]=e;return n||t>1?`{${t+(n?","+n:"")}}`:""}function F(e,t,n){return`[${e}${t-e==1?"":"-"}${t}]`}function Z(e){return/^-?(0+)\d/.test(e)}function H(e,t,n){if(!t.isPadded)return e;let r=Math.abs(t.maxLen-String(e).length),s=n.relaxZeros!==!1;switch(r){case 0:return"";case 1:return s?"0?":"0";case 2:return s?"0{0,2}":"00";default:return s?`0{0,${r}}`:`0{${r}}`}}h.cache={};h.clearCache=()=>h.cache={};S.exports=h});var I=K(T());var export_default=I.default;export{export_default as default};/*!
* to-regex-range <https://github.com/micromatch/to-regex-range>
*
* Copyright (c) 2015-present, Jon Schlinkert.
* Released under the MIT License.
*/