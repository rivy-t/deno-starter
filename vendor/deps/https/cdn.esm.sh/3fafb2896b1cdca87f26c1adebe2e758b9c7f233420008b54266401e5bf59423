import __is_typed_array$ from "/v38/is-typed-array@1.1.5/deno/is-typed-array.js";import __available_typed_arrays$ from "/v38/available-typed-arrays@1.0.2/deno/available-typed-arrays.js";import __function_bind$ from "/v38/function-bind@1.1.1/deno/function-bind.js";import __get_intrinsic$ from "/v38/get-intrinsic@1.1.1/deno/get-intrinsic.js";import __foreach$ from "/v38/foreach@2.0.5/deno/foreach.js";import __has_symbols$ from "/v38/has-symbols@1.0.2/deno/has-symbols.js";var __global$=window;var E=Object.create,s=Object.defineProperty,G=Object.getPrototypeOf,F=Object.prototype.hasOwnProperty,M=Object.getOwnPropertyNames,N=Object.getOwnPropertyDescriptor;var R=r=>s(r,"__esModule",{value:!0});var o=(r,t)=>()=>(t||r((t={exports:{}}).exports,t),t.exports);var k=(r,t,a)=>{if(t&&typeof t=="object"||typeof t=="function")for(let e of M(t))!F.call(r,e)&&e!=="default"&&s(r,e,{get:()=>t[e],enumerable:!(a=N(t,e))||a.enumerable});return r},z=r=>k(R(s(r!=null?E(G(r)):{},"default",r&&r.__esModule&&"default"in r?{get:()=>r.default,enumerable:!0}:{value:r,enumerable:!0})),r);var O=o((rr,l)=>{"use strict";var u=__function_bind$,n=__get_intrinsic$,v=n("%Function.prototype.apply%"),h=n("%Function.prototype.call%"),b=n("%Reflect.apply%",!0)||u.call(h,v),d=n("%Object.getOwnPropertyDescriptor%",!0),i=n("%Object.defineProperty%",!0),C=n("%Math.max%");if(i)try{i({},"a",{value:1})}catch(r){i=null}l.exports=function(t){var a=b(u,h,arguments);if(d&&i){var e=d(a,"length");e.configurable&&i(a,"length",{value:1+C(0,t.length-(arguments.length-1))})}return a};var S=function(){return b(u,v,arguments)};i?i(l.exports,"apply",{value:S}):l.exports.apply=S});var x=o((tr,m)=>{"use strict";var T=__get_intrinsic$,q=O(),H=q(T("String.prototype.indexOf"));m.exports=function(t,a){var e=T(t,!!a);return typeof e=="function"&&H(t,".prototype.")>-1?q(e):e}});var $=o((er,P)=>{"use strict";var J=__get_intrinsic$,c=J("%Object.getOwnPropertyDescriptor%");if(c)try{c([],"length")}catch(r){c=null}P.exports=c});var I=o((ar,w)=>{"use strict";var B=__foreach$,K=__available_typed_arrays$,D=x(),L=D("Object.prototype.toString"),Q=__has_symbols$(),j=Q&&typeof Symbol.toStringTag=="symbol",U=K(),V=D("String.prototype.slice"),A={},y=$(),f=Object.getPrototypeOf;j&&y&&f&&B(U,function(r){if(typeof __global$[r]=="function"){var t=new __global$[r];if(!(Symbol.toStringTag in t))throw new EvalError("this engine has support for Symbol.toStringTag, but "+r+" does not have the property! Please report this.");var a=f(t),e=y(a,Symbol.toStringTag);if(!e){var p=f(a);e=y(p,Symbol.toStringTag)}A[r]=e.get}});var W=function(t){var a=!1;return B(A,function(e,p){if(!a)try{var g=e.call(t);g===p&&(a=g)}catch(Z){}}),a},X=__is_typed_array$;w.exports=function(t){return X(t)?j?W(t):V(L(t),8,-1):!1}});var Y=z(I());var export_default=Y.default;export{export_default as default};